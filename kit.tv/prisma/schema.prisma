// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String        @id @default(uuid())
  username       String        @unique
  imageUrl       String        @db.Text
  externalUserId String        @unique
  bio            String?       @db.Text
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  followCount    Int           @default(0)
  activeStream   ActiveStream?
  button         Button?
}

model ActiveStream {
  id           String   @id @default(uuid())
  title        String?  @db.Text
  category     String?  @db.Text
  streamUserId String   @unique
  streamer     User     @relation(fields: [streamUserId], references: [id])
  startTime    DateTime @default(now())
}

model Button {
  id           String        @id @default(uuid())
  text         String?       @db.Text
  font         String?       @db.Text
  size         Int           @default(16)
  color        Int           @default(0) //hex for black
  instructions String?       @db.Text
  credits      String?       @db.Text
  timeout      Int           @default(100)
  inQueue      ButtonQueue[]
  streamerId   String        @unique
  user         User          @relation(fields: [streamerId], references: [id])
}

model Sound {
  id      String @id @default(uuid())
  fileUrl String @db.Text
}

model ButtonQueue {
  id        String   @id @default(uuid())
  buttonId  String   @unique
  button    Button   @relation(fields: [buttonId], references: [id])
  timestamp DateTime @default(now())
}
